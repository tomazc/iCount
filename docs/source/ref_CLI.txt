usage: iCount [-h] [-v]   ...

iCount: protein-RNA interaction analysis
========================================

iCount is a Python module and associated command-line interface (CLI), which provides all the
commands needed to process protein-RNA `iCLIP`_ interaction data and to identify and quantify
sites of protein-RNA interactions on RNA.

iCount's main input are FASTQ files with `iCLIP`_ sequencing data, its main output are BED files
with identified and quantified cross-linked sites.

A number of analyses are included in iCount that provide insights into the properties of
protein-RNA interaction.

optional arguments:
  -h, --help     show this help message and exit
  -v, --version  show program's version number and exit

Commands:
   
    releases     Get list of available ENSEMBL releases.
    species      Get list of species for given release.
    annotation   Download annotation in GTF file fromat.
    genome       Downloads genome file in FASTA fromat.
    segment      Segmentation
    genes        Extract largest possible gene segments from GTF file.
    demultiplex  Demultiplexing
    cutadapt     Cutadapt
    mapindex     Generate STAR index
    map          Map using STAR
    xlsites      Identify and quantify cross-linked sites
    annotate     Cross-link site annotation
    clusters     Cluster sites
    group        Group BED files
    peaks        Peak finding
    summary      Cross-link site summary
    examples     Examples
    man          Print help for all commands.
    args         Print arguments form all CLI commands


releases
========

usage: iCount releases [-h] [-S] [-F] [-P] [-M]

Get list of available ENSEMBL releases.

Only allows ENSEMBL releases 59..84.

optional arguments:
  -h, --help            show this help message and exit
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


species
=======

usage: iCount species [-h] [-r] [-S] [-F] [-P] [-M]

Get list of species for given release.

optional arguments:
  -h, --help            show this help message and exit
  -r , --release        The release number (can be str or int). Only ENSEMBL releases 59..84 are available (default: 84)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


annotation
==========

usage: iCount annotation [-h] [-r] [-od] [-a] [-S] [-F] [-P] [-M] species

Download annotation in GTF file fromat.

positional arguments:
  species               Species latin name

optional arguments:
  -h, --help            show this help message and exit
  -r , --release        Release number. Only ENSEMBL releases 59..84 are available (default: 84)
  -od , --out_dir       Download to this directory (if not given, current working directory) (default: None)
  -a , --annotation     Annotation filename (must have .gz file extension). If not given, (default: None)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


genome
======

usage: iCount genome [-h] [-r] [-od] [--genome] [--temp_dir]
                     [--chromosomes  [...]] [-S] [-F] [-P] [-M]
                     species

Downloads genome file in FASTA fromat.

Several steps are performed:

    * querry for list off all FASTA files for given release and species
    * filter this list to get only whole chromosome files
    * if chromosomes paramter is given, take only specified chromosomes
    * sort list of these files to have the correct order
    * download each file and write it to target_fname

positional arguments:
  species               Species latin name

optional arguments:
  -h, --help            show this help message and exit
  -r , --release        Release number. Only ENSEMBL releases 59..84 are available (default: 84)
  -od , --out_dir       Download to this directory (if not given, current working directory) (default: None)
  --genome              Annotation filename (must have .gz file extension). If not given, (default: None)
  --temp_dir            Temporary directory with intermediate results (default: None)
  --chromosomes  [ ...]
                        If given, don't download the whole genome, but juts the given (default: None)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


segment
=======

usage: iCount segment [-h] [-prog] [-S] [-F] [-P] [-M]
                      annotation segmentation fai

Segmentation
------------

Parse genome annotation, segment it and prepare a number of versions needed
for mapping and for various analyses:

- regions of genes (all isoforms and other parts merged into one region)
- regions of individual region types (segment each gene into exonic, intronic, nc, utr, etc..)

positional arguments:
  annotation            Path to input GTF file
  segmentation          Path to output GTF file
  fai                   Path to genome_file (.fai or similar)

optional arguments:
  -h, --help            show this help message and exit
  -prog, --report_progress
                        Switch to show progress (default: False)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


genes
=====

usage: iCount genes [-h] [--fai] [--feature] [--attribute] [-S] [-F] [-P] [-M]
                    annotation segmentation

Extract largest possible gene segments from GTF file.

positional arguments:
  annotation            Path to GTF input file
  segmentation          Path to GTF output file that includes segmentation

optional arguments:
  -h, --help            show this help message and exit
  --fai                 Path to genome_file (.fai or similar) (default: None)
  --feature             Name for the 3rd column of output intervals (default: gene)
  --attribute           Attribute to use as unique identifier for output intervals (default: gene_id)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


demultiplex
===========

usage: iCount demultiplex [-h] [-mis] [-ml] [--prefix] [-od] [-S] [-F] [-P]
                          [-M]
                          reads adapter barcodes [barcodes ...]

Demultiplexing
==============

Split FASTQ file into separate FASTQ files, one for each sample barcode.
Saved FASTQ files contain sequences where sample barcode, random
barcode, and adapter sequences were removed. Random barcode is moved into
the header line, because needed in later steps, when removing PCR duplicates
and counting number of cross-link events.

.. autofunction:: iCount.demultiplex.run
.. autofunction:: iCount.demultiplex.demultiplex

positional arguments:
  reads                 Path to reads from a sequencing library
  adapter               Adapter sequence to remove from ends of reads
  barcodes              List of barcodes used for library

optional arguments:
  -h, --help            show this help message and exit
  -mis , --mismatches   Number of tolerated mismatches when comparing barcodes (default: 1)
  -ml , --minimum_length 
                        Minimum length of trimmed sequence to keep (default: 15)
  --prefix              Prefix of generated FASTQ files (default: demux)
  -od , --out_dir       Output folder. Use local folder if none given (default: .)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


cutadapt
========

usage: iCount cutadapt [-h] [--qual_base] [--qual_trim] [-ml] [-S] [-F] [-P]
                       [-M]
                       reads reads_trimmed adapter

Cutadapt
--------

Interface to running cutadapt.

positional arguments:
  reads                 Input FASTQ file
  reads_trimmed         Output FASTQ file containing trimmed reads
  adapter               Sequence of an adapter ligated to the 3' end

optional arguments:
  -h, --help            show this help message and exit
  --qual_base           Assume that quality values in FASTQ are encoded as ascii(quality + (default: 64)
  --qual_trim           Trim low-quality bases before adapter removal (default: None)
  -ml , --minimum_length 
                        Discard trimmed reads that are shorter than `minimum_length` (default: None)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


mapindex
========

usage: iCount mapindex [-h] [-a] [--overhang] [--overhang_min] [--threads]
                       [-S] [-F] [-P] [-M]
                       genome genome_index

Generate STAR index
-------------------

Call STAR to generate genome index, which is used for mapping.

Calls STAR to generate index based on genome sequence and annotation,
by passing the following parameters:

--runThreadN NumberOfThreads
--runMode genomeGenerate
--genomeDir /path/to/genomeDir
--genomeFastaFiles /path/to/genome/fasta1 /path/to/genome/fasta2 ...
--sjdbGTFfile /path/to/annotations.gtf
--sjdbOverhang ReadLength-1

positional arguments:
  genome                Genome sequence to index
  genome_index          Output folder, where to store genome index

optional arguments:
  -h, --help            show this help message and exit
  -a , --annotation     Annotation that defines splice junctions (default: )
  --overhang            Sequence length around annotated junctions to be used by STAR when (default: 100)
  --overhang_min        TODO (default: 8)
  --threads             Number of threads that STAR can use for generating index (default: 1)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


map
===

usage: iCount map [-h] [-a] [--multimax] [-mis] [--threads] [-S] [-F] [-P]
                  [-M]
                  reads genome_index out_dir

Map using STAR
--------------

Call STAR to map reads to genome index and produce BAM file.

Calls STAR to map sequence reads to reference genome, by passing the
following parameters:

--runThreadN NumberOfThreads
--genomeDir /path/to/genomeDir
--readFilesIn /path/to/read1 [/path/to/read2]
--readFilesCommand gunzip -c
--sjdbGTFfile /path/to/ann.gtf
--outFileNamePrefix /path/to/output/dir/prefix
#--outSAMmapqUnique Integer0to255
--outSAMprimaryFlag AllBestScore
--outFilterMultimapNmax maxHits # default 10
--outFilterMismatchNmax # default 10

positional arguments:
  reads                 Sequencing reads to map to genome
  genome_index          Folder with genome index
  out_dir               Output folder, where to store mapping results

optional arguments:
  -h, --help            show this help message and exit
  -a , --annotation     GTF annotation needed for mapping to splice-junctions (default: )
  --multimax            Number of allowed multiple hits (default: 10)
  -mis , --mismatches   Number of allowed mismatches (default: 2)
  --threads             Number of threads that STAR can use for generating index (default: 1)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


xlsites
=======

usage: iCount xlsites [-h] [-g] [--quant] [-mis] [--mapq_th] [--multimax]
                      [-prog] [-S] [-F] [-P] [-M]
                      bam sites_unique sites_multi

Identify and quantify cross-linked sites
----------------------------------------

Transforms information in BAM file on mapped reads and their randomers into BED file.

Reads information on mapped reads and their associated randomer sequence
to produce BED file with cross-link sites.

Reads are first grouped by the start position. Multiple reads that start on
same position and have the same (similar) randomer are collapsed into one (
most common, if many of same frequency, take longest) read.

Collapsed reads can then be grouped in three different ways: by the start,
middle or end position.

When grouping by the start, we report one positions before read start. That
is the most likely cross-linked site.

Grouping by middle and end positions can be used for diagnostic purposes.

TODO: check overlap between unique and multimap BED files, should be small,
otherwise, we should think of a more approapriate quantification of (division
of randomers among) unique mapped sites that overlap with multimapped reads

positional arguments:
  bam                   Input BAM file with mapped reads
  sites_unique          Output BED6 file to store data from uniquely mapped reads
  sites_multi           Output BED6 file to store data from multi-mapped reads

optional arguments:
  -h, --help            show this help message and exit
  -g , --group_by       Group reads together by 'start', 'middle' or 'end' nucleotide (default: start)
  --quant               Report number of 'cDNA' or number of 'reads' (default: cDNA)
  -mis , --mismatches   Reads on same position with random barcode differing less than (default: 2)
  --mapq_th             Ignore hits with MAPQ < mapq_th (default: 0)
  --multimax            Ignore reads, mapped to more than ``multimax`` places (default: 50)
  -prog, --report_progress
                        Switch to report progress (default: False)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


annotate
========

usage: iCount annotate [-h] [--subtype] [-e  [...]] [-S] [-F] [-P] [-M]
                       annotation sites sites_annotated

Cross-link site annotation
--------------------------

Annotate each cross link site with types of regions that intersect with it.

positional arguments:
  annotation            Path to annotation file (should be GTF and include `subtype` attribute)
  sites                 Path to input BED6 file listing all cross-linked sites
  sites_annotated       Path to output BED6 file listing annotated cross-linked sites

optional arguments:
  -h, --help            show this help message and exit
  --subtype             Subtype (default: biotype)
  -e  [ ...], --excluded_types  [ ...]
                        Excluded types (default: None)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


clusters
========

usage: iCount clusters [-h] [--dist] [-S] [-F] [-P] [-M] sites clusters

Cluster sites
-------------

Merge adjacent cross-linked sites into clusters.

Read bedGraph with (significant) cross-linked sites. Cluster together sites that
are apart at most a specified number of nucleotides. Return BED file with
clusters' coordinates.

positional arguments:
  sites                 Path to input BED6 file with sites
  clusters              Path to output BED6 file with merged sites

optional arguments:
  -h, --help            show this help message and exit
  --dist                Distance between two cross_links to still merge them (default: 20)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


group
=====

usage: iCount group [-h] [-S] [-F] [-P] [-M] sites_grouped sites [sites ...]

Group BED files
---------------

Group analysis docstring... TODO!

positional arguments:
  sites_grouped         Path to output BED6 file containing merged data from input sites files
  sites                 List of BED6 files(paths) to be merged

optional arguments:
  -h, --help            show this help message and exit
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


peaks
=====

usage: iCount peaks [-h] [--scores] [--hw] [--fdr] [-p] [-rnd]
                    [--features  [...]] [-prog] [-g] [-S] [-F] [-P] [-M]
                    annotation sites peaks

Peak finding
------------

Determine local clusters of significantly cross-linked sites.

Read annotation and bedGraph with cross-linked sites. Perform permutation
analysis to determine significance (FDR) of individual sites. Return bedGraph of
significant sites.

positional arguments:
  annotation            Path to input GTF annotation file
  sites                 Path to input BED6 file listing all cross-linked sites
  peaks                 Path to output BED6 file listing significant sites

optional arguments:
  -h, --help            show this help message and exit
  --scores              Path to output tab-delimited file with detailed info on significance calculations (default: None)
  --hw                  Half-window size (default: 3)
  --fdr                 FDR threshold (default: 0.05)
  -p , --perms          Number of permutations (default: 100)
  -rnd , --rnd_seed     Seed for random generator (default: 42)
  --features  [ ...]    Features over which to perform analysis (default: gene)
  -prog, --report_progress
                        Print analysis progress (default: False)
  -g , --group_by       No description
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


summary
=======

usage: iCount summary [-h] [--types_length_file] [--digits] [--subtype]
                      [-e  [...]] [-S] [-F] [-P] [-M]
                      annotation sites summary fai

Cross-link site summary
-----------------------

Report proportion of cross-link events/sites on each region type

positional arguments:
  annotation            Path to annotation GTF file (should include subtype attribute)
  sites                 Path to BED6 file listing cross-linked sites
  summary               Path to output tab-delimited file with summary statistics
  fai                   Path to file with chromosome lengths

optional arguments:
  -h, --help            show this help message and exit
  --types_length_file   Path to file with lengths of each type (default: None)
  --digits              Number of decimal places in results (default: 8)
  --subtype             Name of attribute to be used as subtype (default: biotype)
  -e  [ ...], --excluded_types  [ ...]
                        Types listed in 3rd column of GTF to be exclude from analysis (default: None)
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


examples
========

usage: iCount examples [-h] [-od] [-S] [-F] [-P] [-M]

Examples
========

optional arguments:
  -h, --help            show this help message and exit
  -od , --out_dir       No description
  -S , --stdout_log     Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned OFF.
  -F , --file_log       Threshold value (0-50) for logging to file. If 0, logging to file if turned OFF.
  -P , --file_logpath   Path to log file.
  -M , --results_file   File into which to store Metrics.


args
====

usage: iCount args [-h]

optional arguments:
  -h, --help  show this help message and exit


